plugins {
    id 'fabric-loom' version '1.0+'
    id 'com.modrinth.minotaur' version '2.8.7'
    id 'com.gradleup.shadow' version '8+'
}

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

archivesBaseName = "${project_name}"

version = "${project_version}-1.20.1-Fabric"

sourceSets.main.resources { srcDir 'src/generated/resources' }

dependencies {
    minecraft "com.mojang:minecraft:1.20.1"
    mappings loom.officialMojangMappings()

    modCompileOnly "net.fabricmc:fabric-loader:${fabric_loader}"
    modCompileOnly "net.fabricmc.fabric-api:fabric-api:${fabric_api_20}"

    modCompileOnly("me.lucko:fabric-permissions-api:${fabric_permissions_api_20}")

    shadow("me.lucko:fabric-permissions-api:${fabric_permissions_api_20}") {
        transitive = false
    }
    shadow 'com.zaxxer:HikariCP:6.3.0'
    shadow 'com.mysql:mysql-connector-j:9.3.0'
    shadow 'org.mariadb.jdbc:mariadb-java-client:3.5.3'
    shadow 'org.postgresql:postgresql:42.7.7'
}

shadowJar {
    configurations = [project.configurations.shadow]
    setArchiveBaseName("${rootProject.name}")

    relocate('me.lucko.fabric.api.permissions.v0', 'com.vecoo.extralib.shade.lucko.fabric.api.permissions.v0')
    relocate('com.zaxxer.hikari', 'com.vecoo.extralib.shade.zaxxer.hiraki')
    relocate('org.slf4j', 'com.vecoo.extralib.shade.slf4j')
    relocate('com.mysql', 'com.vecoo.extralib.shade.mysql')
    relocate('org.mariadb.jdbc', 'com.vecoo.extralib.shade.mariadb.jdbc')
    relocate('org.postgresql', 'com.vecoo.extralib.shade.postgresql')

    relocate('com.google.protobuf', 'com.vecoo.extralib.shade.google.protobuf')
    relocate('org.checkerframework', 'com.vecoo.extralib.shade.checkerframework')

    exclude 'META-INF/**'
    exclude 'INFO_BIN/**'
    exclude 'INFO_SRC/**'
    exclude 'README/**'
    exclude 'LICENSE/**'
    exclude 'google/**'
    exclude 'driver.properties'
    exclude 'deprecated.properties'
    exclude 'mariadb.properties'
}

remapJar {
    dependsOn shadowJar
    input.set(shadowJar.archiveFile)
}

processResources {
    filesMatching('fabric.mod.json') {
        expand(
                'project_name': project_name,
                'project_version': project_version
        )
    }
}

def gradleProperties = new Properties()
def gradlePropertiesFile = new File(rootProject.file("/.gradle/gradle.properties").path)

if (gradlePropertiesFile.exists()) {
    gradlePropertiesFile.withInputStream { gradleProperties.load(it) }
}

modrinth {
    token = gradleProperties.getProperty("MODRINTH_API_KEY")
    projectId = "extralib"
    versionName = "${project_name}-${version}"
    versionNumber = project_version
    versionType = "release"
    changelog = rootProject.file("changelog.md").text
    uploadFile = shadowJar
    gameVersions = ["1.20.1"]
    loaders = ["fabric"]
}

build.finalizedBy('versionedRelease')